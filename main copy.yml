AWSTemplateFormatVersion: "2010-09-09"
#Parameters:
  #SecurityGroupDescription:
    #Description: Security Group Description
    #Type: String
  #KeyName:
   # Description: Key Pair for EC2
    #Type: 'AWS::EC2::KeyPair::KeyName'
Description: EC2-Loadbalancer
Resources:

#VPC
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value: sampleVPC  

#PublicSubnet
  demoPubSub:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "ap-south-1a"
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value: PubSub 

#PrivateSubnet
  myPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "ap-south-1b"
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value: PvtSub             

#internet gateway
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: sampleIGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: myVPC
      InternetGatewayId:
        Ref: myInternetGateway

#Routetable
  myRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: myVPC
      Tags:
      - Key: Name
        Value: my-PUB-RT

  myRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: myRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: myInternetGateway

  mySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: demoPubSub
      RouteTableId:
        Ref: myRouteTable
  
# security group
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Security Group
      VpcId: 
        Ref: myVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: SG-ELB

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroupDescription
      VpcId: 
        Ref: myVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId: 
          Fn::GetAtt:
          - ELBSecurityGroup
          - GroupId
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: SG-EC2

# Load Balancer for EC2
  LoadBalancerforEC2:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Subnets: 
      - !Ref demoPubSub
      Instances:
      - !Ref mywebins
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      SecurityGroups:
      - !GetAtt ELBSecurityGroup.GroupId

# EC2 Instance
  mywebins:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: "ap-south-1b"
      ImageId: ami-0e6329e222e662a52
      InstanceType: t2.micro
      SubnetId: !Ref myPrivateSubnet
      SecurityGroupIds: 
      - !Ref EC2SecurityGroup
      Tags:
      - Key: Name
        Value: mywebInstance
      KeyName: !Ref KeyName
      UserData: 
        Fn::Base64: !Sub |
          sudo yum -y install git
          sudo yum -y install httpd
          sudo systemctl status httpd
          sudo systemctl start httpd
          sudo systemctl enable httpd
          sudo systemctl status httpd
          sudo git clone https://github.com/ravi2krishna/ecomm.git /var/www/html
          ls /var/www/html
Outputs:
  URL:
    Description: The URL of the website
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - LoadBalancerforEC2
          - DNSName
          
